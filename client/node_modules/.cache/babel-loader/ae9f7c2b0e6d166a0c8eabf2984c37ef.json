{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/sinsekai/client/src/pages/vender.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Vender = _ref => {\n  _s();\n\n  let {\n    title,\n    teamid,\n    confidence\n  } = _ref;\n  const [metaMaskFlag, setMetaMaskFlag] = useState(false);\n  const [account, setAccount] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    const tmpFlag = window.ethereum && window.ethereum.isMetaMask;\n    setMetaMaskFlag(tmpFlag);\n    console.log(tmpFlag);\n  }, []);\n\n  const connectWallet = () => {\n    window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    }).then(result => {\n      setAccount(result[0]);\n    }).catch(error => {\n      setErrorMessage(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), account]\n  }, void 0, true);\n};\n\n_s(Vender, \"LFD2rnERQjZG6qfJsXReizdpKJg=\");\n\n_c = Vender;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vender\");","map":{"version":3,"names":["React","useState","useEffect","Vender","title","teamid","confidence","metaMaskFlag","setMetaMaskFlag","account","setAccount","errorMessage","setErrorMessage","tmpFlag","window","ethereum","isMetaMask","console","log","connectWallet","request","method","then","result","catch","error","message"],"sources":["/home/giparang/threadweb/sinsekai/client/src/pages/vender.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nexport const Vender = ({title, teamid, confidence}) => {\n    const [metaMaskFlag, setMetaMaskFlag] = useState(false);\n    const [account,setAccount] = useState(null);\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst tmpFlag = window.ethereum && window.ethereum.isMetaMask;\n\t\tsetMetaMaskFlag(tmpFlag);\n        console.log(tmpFlag);\n\t},[]);\n    \n    const connectWallet = () => {\n\t\twindow.ethereum\n\t\t.request({ method: \"eth_requestAccounts\" })\n\t\t.then((result) => {\n\t\t\tsetAccount(result[0]);\n\t\t})\n\t\t.catch((error) => {\n\t\t  setErrorMessage(error.message);\n\t\t});\n\t}\n\n  return (\n    <>\n    <a onClick={connectWallet}>Connect Wallet</a>\n    {account}\n    </>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,OAAO,MAAMC,MAAM,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAACC,KAAD;IAAQC,MAAR;IAAgBC;EAAhB,CAAgC;EACnD,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAM,CAACQ,OAAD,EAASC,UAAT,IAAuBT,QAAQ,CAAC,IAAD,CAArC;EACH,MAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;EAEAC,SAAS,CAAC,MAAM;IACf,MAAMW,OAAO,GAAGC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,UAAnD;IACAR,eAAe,CAACK,OAAD,CAAf;IACMI,OAAO,CAACC,GAAR,CAAYL,OAAZ;EACN,CAJQ,EAIP,EAJO,CAAT;;EAMG,MAAMM,aAAa,GAAG,MAAM;IAC9BL,MAAM,CAACC,QAAP,CACCK,OADD,CACS;MAAEC,MAAM,EAAE;IAAV,CADT,EAECC,IAFD,CAEOC,MAAD,IAAY;MACjBb,UAAU,CAACa,MAAM,CAAC,CAAD,CAAP,CAAV;IACA,CAJD,EAKCC,KALD,CAKQC,KAAD,IAAW;MAChBb,eAAe,CAACa,KAAK,CAACC,OAAP,CAAf;IACD,CAPD;EAQA,CATE;;EAWF,oBACE;IAAA,wBACA;MAAG,OAAO,EAAEP,aAAZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,EAECV,OAFD;EAAA,gBADF;AAMD,CA5BM;;GAAMN,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}