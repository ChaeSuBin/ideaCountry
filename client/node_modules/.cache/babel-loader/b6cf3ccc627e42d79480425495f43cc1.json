{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/sinsekai/client/src/components/fileViewer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport FileViewer from \"react-file-viewer\";\nimport { getIdeaOne } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ViewFile = _ref => {\n  _s();\n\n  let {\n    title,\n    teamid,\n    confidence\n  } = _ref;\n  const [checkFild, setCheck] = useState(false);\n  const [view, setView] = useState(false);\n  const [secret, setSecret] = useState(false); //const file = `https://ideaideaserver.herokuapp.com/viewdocx/${ideaParams.title}`;\n\n  const file = `http://localhost:3039/viewdocx/${title}`;\n  const type = \"docx\";\n  useEffect(() => {\n    if (confidence) setSecret(true);\n    fileinspect();\n  }, []);\n\n  const fileinspect = async () => {\n    const fileCheck = await getIdeaOne(teamid);\n    console.log(fileCheck.file);\n    setCheck(fileCheck.file);\n  };\n\n  const handleView = () => {\n    if (checkFild) setView(!view);else alert('file does not exist');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'black',\n      width: '100%'\n    },\n    children: [secret ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleView,\n      className: \"button02\",\n      children: \"\\uC544\\uC774\\uB514\\uC5B4 \\uAD6C\\uD604\\uC5D0 \\uB300\\uD55C \\uD30C\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleView,\n      className: \"button02\",\n      children: \"\\uC774 \\uC544\\uC774\\uB514\\uC5B4\\uC758 \\uC0C1\\uC138\\uC124\\uBA85 \\uD3BC\\uCE58\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 94\n    }, this), view && /*#__PURE__*/_jsxDEV(FileViewer, {\n      fileType: type,\n      filePath: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewFile, \"s0r8bTXRRgZfAMmNwjVEGFutMNI=\");\n\n_c = ViewFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewFile\");","map":{"version":3,"names":["React","useState","useEffect","FileViewer","getIdeaOne","ViewFile","title","teamid","confidence","checkFild","setCheck","view","setView","secret","setSecret","file","type","fileinspect","fileCheck","console","log","handleView","alert","color","width"],"sources":["/home/giparang/threadweb/sinsekai/client/src/components/fileViewer.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport FileViewer from \"react-file-viewer\";\nimport { getIdeaOne } from \"../api\";\n\nexport const ViewFile = ({title, teamid, confidence}) => {\n  const [checkFild, setCheck] = useState(false);\n  const [view, setView] = useState(false);\n  const [secret, setSecret] = useState(false);\n  //const file = `https://ideaideaserver.herokuapp.com/viewdocx/${ideaParams.title}`;\n  const file = `http://localhost:3039/viewdocx/${title}`;\n  const type = \"docx\";\n\n  useEffect(()=>{\n    if(confidence)\n      setSecret(true);\n    fileinspect();\n  },[]);\n    \n  const fileinspect = async() => {\n    const fileCheck = await getIdeaOne(teamid);\n    console.log(fileCheck.file);\n    setCheck(fileCheck.file);\n  }\n  const handleView = () => {\n    if(checkFild)\n      setView(!view);\n    else\n      alert('file does not exist');\n  };\n    \n  return (\n    <div style={{color:'black', width:'100%'}}>\n      { secret ? <button onClick={handleView} className=\"button02\">아이디어 구현에 대한 파일</button> : <button onClick={handleView} className=\"button02\">이 아이디어의 상세설명 펼치기</button>}\n      \n      {view && (\n        <FileViewer\n          fileType={type}\n          filePath={file}\n        />\n      )}\n    </div>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,QAA3B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAACC,KAAD;IAAQC,MAAR;IAAgBC;EAAhB,CAAgC;EACvD,MAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC,CAHuD,CAIvD;;EACA,MAAMc,IAAI,GAAI,kCAAiCT,KAAM,EAArD;EACA,MAAMU,IAAI,GAAG,MAAb;EAEAd,SAAS,CAAC,MAAI;IACZ,IAAGM,UAAH,EACEM,SAAS,CAAC,IAAD,CAAT;IACFG,WAAW;EACZ,CAJQ,EAIP,EAJO,CAAT;;EAMA,MAAMA,WAAW,GAAG,YAAW;IAC7B,MAAMC,SAAS,GAAG,MAAMd,UAAU,CAACG,MAAD,CAAlC;IACAY,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACH,IAAtB;IACAL,QAAQ,CAACQ,SAAS,CAACH,IAAX,CAAR;EACD,CAJD;;EAKA,MAAMM,UAAU,GAAG,MAAM;IACvB,IAAGZ,SAAH,EACEG,OAAO,CAAC,CAACD,IAAF,CAAP,CADF,KAGEW,KAAK,CAAC,qBAAD,CAAL;EACH,CALD;;EAOA,oBACE;IAAK,KAAK,EAAE;MAACC,KAAK,EAAC,OAAP;MAAgBC,KAAK,EAAC;IAAtB,CAAZ;IAAA,WACIX,MAAM,gBAAG;MAAQ,OAAO,EAAEQ,UAAjB;MAA6B,SAAS,EAAC,UAAvC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAH,gBAA+E;MAAQ,OAAO,EAAEA,UAAjB;MAA6B,SAAS,EAAC,UAAvC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADzF,EAGGV,IAAI,iBACH,QAAC,UAAD;MACE,QAAQ,EAAEK,IADZ;MAEE,QAAQ,EAAED;IAFZ;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAtCM;;GAAMV,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}