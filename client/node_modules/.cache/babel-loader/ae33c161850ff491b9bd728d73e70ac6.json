{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/sinsekai/client/src/components/ItemsCpnt.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { getImgBlob } from '../api';\nimport './card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ListItemsCompnt extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      imagePreviewUrl: null\n    };\n\n    this.componentDidMount = async () => {\n      if (this.props.ntmode) {\n        const blob = await getImgBlob(this.props.title); //console.log(blob.data);\n\n        let bytearray = new Uint8Array(blob.data.length);\n\n        for (let iter = 0; iter < blob.data.length; ++iter) {\n          bytearray[iter] = blob.data[iter];\n        }\n\n        let conBlob = new Blob([bytearray]); //console.log(conBlob);\n\n        this.handleFileReader(conBlob);\n      }\n    };\n\n    this.handleFileReader = _blob => {\n      const reader = new FileReader();\n      const file = _blob;\n\n      reader.onloadend = () => {\n        this.setState({\n          imagePreviewUrl: reader.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n    };\n  }\n\n  render() {\n    const {\n      title,\n      teamid,\n      description,\n      type,\n      ...props\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ToDoListItem\",\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: '/ideadetails/' + teamid + '/' + type,\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ToDoListItem-title\",\n          children: [title, \"(test)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), this.state.imagePreviewUrl === null ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.imagePreviewUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ToDoListItem-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;\nexport class AlertCardCpnt extends Component {\n  render() {\n    const {\n      title,\n      description,\n      ...props\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AlertListItem\",\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AlertListItem-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AlertListItem-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"names":["React","Component","Link","getImgBlob","ListItemsCompnt","state","imagePreviewUrl","componentDidMount","props","ntmode","blob","title","bytearray","Uint8Array","data","length","iter","conBlob","Blob","handleFileReader","_blob","reader","FileReader","file","onloadend","setState","result","readAsDataURL","render","teamid","description","type","textDecoration","AlertCardCpnt"],"sources":["/home/giparang/threadweb/sinsekai/client/src/components/ItemsCpnt.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { getImgBlob } from '../api';\nimport './card.css';\n\nexport class ListItemsCompnt extends Component {\n  state = {\n    imagePreviewUrl: null\n  }\n\n  componentDidMount = async() => {\n    if(this.props.ntmode){\n      const blob = await getImgBlob(this.props.title);\n      //console.log(blob.data);\n      let bytearray = new Uint8Array(blob.data.length);\n      for(let iter = 0; iter < blob.data.length; ++iter){\n        bytearray[iter] = blob.data[iter];\n      }\n      let conBlob = new Blob([bytearray]);\n      //console.log(conBlob);\n      this.handleFileReader(conBlob);\n    }\n  }\n\n  handleFileReader = (_blob) => {\n    const reader = new FileReader()\n    const file = _blob\n    reader.onloadend = () => {\n      this.setState({\n        imagePreviewUrl: reader.result\n      }); \n    }   \n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    const {\n      title,\n      teamid,\n      description,\n      type,\n      ...props\n    } = this.props;\n\n    return (\n      <div className=\"ToDoListItem\"{...props}>\n        \n        <Link to={'/ideadetails/' + teamid + '/' + type} style={{ textDecoration: 'none' }}>\n        <div className=\"ToDoListItem-title\">{title}(test)</div></Link>\n        { this.state.imagePreviewUrl===null ? <></>\n            : <div><img src={this.state.imagePreviewUrl} /></div>\n        }\n        <div className=\"ToDoListItem-description\">{description}</div>\n      </div>\n    );\n  }\n};\nexport class AlertCardCpnt extends Component {\n\n  render() {\n    const {\n      title,\n      description,\n      ...props\n    } = this.props;\n\n    return (\n      <div className=\"AlertListItem\"{...props}>\n        <div className=\"AlertListItem-title\">{title}</div>\n        <div className=\"AlertListItem-description\">{description}</div>\n      </div>\n    );\n  }\n};"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAO,YAAP;;;AAEA,OAAO,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;EAAA;IAAA;IAAA,KAC7CI,KAD6C,GACrC;MACNC,eAAe,EAAE;IADX,CADqC;;IAAA,KAK7CC,iBAL6C,GAKzB,YAAW;MAC7B,IAAG,KAAKC,KAAL,CAAWC,MAAd,EAAqB;QACnB,MAAMC,IAAI,GAAG,MAAMP,UAAU,CAAC,KAAKK,KAAL,CAAWG,KAAZ,CAA7B,CADmB,CAEnB;;QACA,IAAIC,SAAS,GAAG,IAAIC,UAAJ,CAAeH,IAAI,CAACI,IAAL,CAAUC,MAAzB,CAAhB;;QACA,KAAI,IAAIC,IAAI,GAAG,CAAf,EAAkBA,IAAI,GAAGN,IAAI,CAACI,IAAL,CAAUC,MAAnC,EAA2C,EAAEC,IAA7C,EAAkD;UAChDJ,SAAS,CAACI,IAAD,CAAT,GAAkBN,IAAI,CAACI,IAAL,CAAUE,IAAV,CAAlB;QACD;;QACD,IAAIC,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACN,SAAD,CAAT,CAAd,CAPmB,CAQnB;;QACA,KAAKO,gBAAL,CAAsBF,OAAtB;MACD;IACF,CAjB4C;;IAAA,KAmB7CE,gBAnB6C,GAmBzBC,KAAD,IAAW;MAC5B,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;MACA,MAAMC,IAAI,GAAGH,KAAb;;MACAC,MAAM,CAACG,SAAP,GAAmB,MAAM;QACvB,KAAKC,QAAL,CAAc;UACZnB,eAAe,EAAEe,MAAM,CAACK;QADZ,CAAd;MAGD,CAJD;;MAKAL,MAAM,CAACM,aAAP,CAAqBJ,IAArB;IACD,CA5B4C;EAAA;;EA8B7CK,MAAM,GAAG;IACP,MAAM;MACJjB,KADI;MAEJkB,MAFI;MAGJC,WAHI;MAIJC,IAJI;MAKJ,GAAGvB;IALC,IAMF,KAAKA,KANT;IAQA,oBACE;MAAK,SAAS,EAAC,cAAf;MAAA,GAAiCA,KAAjC;MAAA,wBAEE,QAAC,IAAD;QAAM,EAAE,EAAE,kBAAkBqB,MAAlB,GAA2B,GAA3B,GAAiCE,IAA3C;QAAiD,KAAK,EAAE;UAAEC,cAAc,EAAE;QAAlB,CAAxD;QAAA,uBACA;UAAK,SAAS,EAAC,oBAAf;UAAA,WAAqCrB,KAArC;QAAA;UAAA;UAAA;UAAA;QAAA;MADA;QAAA;QAAA;QAAA;MAAA,QAFF,EAII,KAAKN,KAAL,CAAWC,eAAX,KAA6B,IAA7B,gBAAoC,qCAApC,gBACI;QAAA,uBAAK;UAAK,GAAG,EAAE,KAAKD,KAAL,CAAWC;QAArB;UAAA;UAAA;UAAA;QAAA;MAAL;QAAA;QAAA;QAAA;MAAA,QALR,eAOE;QAAK,SAAS,EAAC,0BAAf;QAAA,UAA2CwB;MAA3C;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAWD;;AAlD4C;AAmD9C;AACD,OAAO,MAAMG,aAAN,SAA4BhC,SAA5B,CAAsC;EAE3C2B,MAAM,GAAG;IACP,MAAM;MACJjB,KADI;MAEJmB,WAFI;MAGJ,GAAGtB;IAHC,IAIF,KAAKA,KAJT;IAMA,oBACE;MAAK,SAAS,EAAC,eAAf;MAAA,GAAkCA,KAAlC;MAAA,wBACE;QAAK,SAAS,EAAC,qBAAf;QAAA,UAAsCG;MAAtC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,2BAAf;QAAA,UAA4CmB;MAA5C;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAMD;;AAf0C;AAgB5C"},"metadata":{},"sourceType":"module"}