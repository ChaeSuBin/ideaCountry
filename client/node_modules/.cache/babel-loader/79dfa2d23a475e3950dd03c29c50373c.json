{"ast":null,"code":"var _jsxFileName = \"/home/giparang/threadweb/sinsekai/client/src/components/fileViewer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport FileViewer from \"react-file-viewer\";\nimport { getIdeaOne, putFileReadFact } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ViewFile = _ref => {\n  _s();\n\n  let {\n    title,\n    teamid,\n    confidence\n  } = _ref;\n  const [checkFild, setCheck] = useState(false);\n  const [view, setView] = useState(false); //const file = `https://ideaideaserver.herokuapp.com/viewdocx/${ideaParams.title}`;\n\n  const file = `http://localhost:3039/viewdocx/${title}`;\n  const type = \"pdf\";\n  useEffect(() => {\n    if (confidence) setFileRead();\n    fileinspect();\n  }, []);\n\n  const setFileRead = () => {\n    const record = {\n      teamId: teamid,\n      userId: sessionStorage.getItem('userid'),\n      docuName: title\n    };\n    putFileReadFact(record).then(result => {\n      console.log(result);\n    });\n  };\n\n  const fileinspect = async () => {\n    const fileCheck = await getIdeaOne(teamid);\n    console.log(fileCheck.file);\n    setCheck(fileCheck.file);\n  };\n\n  const handleView = () => {\n    if (checkFild) setView(!view);else alert('file does not exist');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'black'\n    },\n    children: [confidence ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleView,\n      className: \"button02\",\n      children: \"\\uC544\\uC774\\uB514\\uC5B4 \\uAD6C\\uD604\\uC5D0 \\uB300\\uD55C \\uD30C\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleView,\n      className: \"button02\",\n      children: \"\\uC774 \\uC544\\uC774\\uB514\\uC5B4\\uC758 \\uC0C1\\uC138\\uC124\\uBA85 \\uD3BC\\uCE58\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 98\n    }, this), view && /*#__PURE__*/_jsxDEV(FileViewer, {\n      fileType: type,\n      filePath: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewFile, \"2oMcTY3t/EQOMRueLaiQ08QVZ0c=\");\n\n_c = ViewFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewFile\");","map":{"version":3,"names":["React","useState","useEffect","FileViewer","getIdeaOne","putFileReadFact","ViewFile","title","teamid","confidence","checkFild","setCheck","view","setView","file","type","setFileRead","fileinspect","record","teamId","userId","sessionStorage","getItem","docuName","then","result","console","log","fileCheck","handleView","alert","color"],"sources":["/home/giparang/threadweb/sinsekai/client/src/components/fileViewer.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport FileViewer from \"react-file-viewer\";\nimport { getIdeaOne, putFileReadFact } from \"../api\";\n\nexport const ViewFile = ({title, teamid, confidence}) => {\n  const [checkFild, setCheck] = useState(false);\n  const [view, setView] = useState(false);\n  //const file = `https://ideaideaserver.herokuapp.com/viewdocx/${ideaParams.title}`;\n  const file = `http://localhost:3039/viewdocx/${title}`;\n  const type = \"pdf\";\n\n  useEffect(()=>{\n    if(confidence)\n      setFileRead();\n    fileinspect();\n  },[]);\n  \n  const setFileRead = () => {\n    const record = {\n      teamId: teamid,\n      userId: sessionStorage.getItem('userid'),\n      docuName: title\n    }\n    putFileReadFact(record).then(result => {\n      console.log(result);\n    })\n  }\n  const fileinspect = async() => {\n    const fileCheck = await getIdeaOne(teamid);\n    console.log(fileCheck.file);\n    setCheck(fileCheck.file);\n  }\n  const handleView = () => {\n    if(checkFild)\n      setView(!view);\n    else\n      alert('file does not exist');\n  };\n    \n  return (\n    <div style={{color:'black'}}>\n      { confidence ? <button onClick={handleView} className=\"button02\">아이디어 구현에 대한 파일</button> : <button onClick={handleView} className=\"button02\">이 아이디어의 상세설명 펼치기</button>}\n      \n      {view && (\n        <FileViewer\n          fileType={type}\n          filePath={file}\n        />\n      )}\n    </div>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,QAA5C;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAACC,KAAD;IAAQC,MAAR;IAAgBC;EAAhB,CAAgC;EACvD,MAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC,CAFuD,CAGvD;;EACA,MAAMa,IAAI,GAAI,kCAAiCP,KAAM,EAArD;EACA,MAAMQ,IAAI,GAAG,KAAb;EAEAb,SAAS,CAAC,MAAI;IACZ,IAAGO,UAAH,EACEO,WAAW;IACbC,WAAW;EACZ,CAJQ,EAIP,EAJO,CAAT;;EAMA,MAAMD,WAAW,GAAG,MAAM;IACxB,MAAME,MAAM,GAAG;MACbC,MAAM,EAAEX,MADK;MAEbY,MAAM,EAAEC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAFK;MAGbC,QAAQ,EAAEhB;IAHG,CAAf;IAKAF,eAAe,CAACa,MAAD,CAAf,CAAwBM,IAAxB,CAA6BC,MAAM,IAAI;MACrCC,OAAO,CAACC,GAAR,CAAYF,MAAZ;IACD,CAFD;EAGD,CATD;;EAUA,MAAMR,WAAW,GAAG,YAAW;IAC7B,MAAMW,SAAS,GAAG,MAAMxB,UAAU,CAACI,MAAD,CAAlC;IACAkB,OAAO,CAACC,GAAR,CAAYC,SAAS,CAACd,IAAtB;IACAH,QAAQ,CAACiB,SAAS,CAACd,IAAX,CAAR;EACD,CAJD;;EAKA,MAAMe,UAAU,GAAG,MAAM;IACvB,IAAGnB,SAAH,EACEG,OAAO,CAAC,CAACD,IAAF,CAAP,CADF,KAGEkB,KAAK,CAAC,qBAAD,CAAL;EACH,CALD;;EAOA,oBACE;IAAK,KAAK,EAAE;MAACC,KAAK,EAAC;IAAP,CAAZ;IAAA,WACItB,UAAU,gBAAG;MAAQ,OAAO,EAAEoB,UAAjB;MAA6B,SAAS,EAAC,UAAvC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAH,gBAA+E;MAAQ,OAAO,EAAEA,UAAjB;MAA6B,SAAS,EAAC,UAAvC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAD7F,EAGGjB,IAAI,iBACH,QAAC,UAAD;MACE,QAAQ,EAAEG,IADZ;MAEE,QAAQ,EAAED;IAFZ;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA/CM;;GAAMR,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}