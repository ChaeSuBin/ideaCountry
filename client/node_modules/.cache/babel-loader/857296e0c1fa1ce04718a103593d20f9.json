{"ast":null,"code":"import _regeneratorRuntime from\"/home/giparang/threadweb/sinsekai/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/giparang/threadweb/sinsekai/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{getPlayersId,postUserRegi}from\"../api.js\";export var registChecker=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_useraddr){var playerId;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getPlayersId(_useraddr);case 2:playerId=_context.sent;_context.prev=3;console.log('p: ',playerId);return _context.abrupt(\"return\",playerId);case 8:_context.prev=8;_context.t0=_context[\"catch\"](3);return _context.abrupt(\"return\",0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[3,8]]);}));return function registChecker(_x){return _ref.apply(this,arguments);};}();var playerRegister=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_useraddr){var record;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:record={addr:_useraddr};_context2.next=3;return postUserRegi(record);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function playerRegister(_x2){return _ref2.apply(this,arguments);};}();","map":{"version":3,"names":["getPlayersId","postUserRegi","registChecker","_useraddr","playerId","console","log","playerRegister","record","addr"],"sources":["/home/giparang/threadweb/sinsekai/client/src/components/registCatch.js"],"sourcesContent":["import { getPlayersId, postUserRegi } from \"../api.js\";\n\nexport const registChecker = async(_useraddr) => {\n    const playerId = await getPlayersId(_useraddr);\n    try{\n      console.log('p: ', playerId);\n      return playerId;\n    }catch(err){\n      return 0;\n    }\n}\n\nconst playerRegister = async(_useraddr) => {\n    const record = { addr: _useraddr}\n    await postUserRegi(record);\n}"],"mappings":"4QAAA,OAASA,YAAT,CAAuBC,YAAvB,KAA2C,WAA3C,CAEA,MAAO,IAAMC,cAAa,4FAAG,iBAAMC,SAAN,uJACFH,aAAY,CAACG,SAAD,CADV,QACnBC,QADmB,+BAGvBC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAmBF,QAAnB,EAHuB,gCAIhBA,QAJgB,0FAMhB,CANgB,sEAAH,kBAAbF,cAAa,4CAAnB,CAUP,GAAMK,eAAc,6FAAG,kBAAMJ,SAAN,mIACbK,MADa,CACJ,CAAEC,IAAI,CAAEN,SAAR,CADI,wBAEbF,aAAY,CAACO,MAAD,CAFC,yDAAH,kBAAdD,eAAc,8CAApB"},"metadata":{},"sourceType":"module"}